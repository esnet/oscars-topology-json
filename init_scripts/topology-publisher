#!/bin/bash
#
# Init file for Topology Publisher
#
# chkconfig: 2345 65 20
# description: Published OSCARS circuits and topology as JSON
#

# Source function library.
. /etc/rc.d/init.d/functions

#Service specific variables
SHORT_NAME=topology-publisher
LONG_NAME="Topology Publisher"
LOCK_FILE=/var/lock/subsys/${SHORT_NAME}
USER=oscars
GROUP=oscars
STOP_TIMEOUT=20
RESTART_DELAY=10
PIDFILE=/var/run/oscars/${SHORT_NAME}.pid

COMMAND="/opt/topology_publisher/scripts/topology_publisher.sh $PIDFILE > /var/log/oscars/${SHORT_NAME}.out 2>&1"

#functions
start(){
    echo -n $"Starting topology-publisher: "
    daemon --pidfile=${PIDFILE} --user=${USER} $COMMAND
    RETVAL=$?
    echo
    [ $RETVAL = 0 ] && touch ${LOCK_FILE}
    return $RETVAL
}

stop(){
    echo -n $"Stopping topology-publisher: "
	killproc -p ${PIDFILE} -d ${STOP_TIMEOUT} python
	RETVAL=$?
	echo
	[ $RETVAL = 0 ] && rm -f ${LOCK_FILE} ${PIDFILE}
}

#handle arguments
ERROR=0
ARGV="$@"
if [ -z "$ARGV" ] ; then 
    ARGS="help"
fi

for ARG in $@ $ARGS
do
    case $ARG in
    start)
        start
	;;
    stop)
	    stop
	;;
    restart)
    	stop
    	sleep $RESTART_DELAY
    	start
	;;
	status)
	    status -p ${PIDFILE} topology-publisher
	;;
    *)
	echo "usage: $0 (start|stop|restart|help)"
	cat <<EOF

start      - start ${LONG_NAME}
stop       - stop ${LONG_NAME}
restart    - restart ${LONG_NAME} if running by sending a SIGHUP or start if 
             not running
status     - status of ${LONG_NAME}
help       - this screen

EOF
	ERROR=2
    ;;

    esac

done

exit $ERROR
